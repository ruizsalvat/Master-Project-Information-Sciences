<?xml version="1.0" encoding="UTF-8"?>
    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
         xmlns:ex="http://example.com/ontology#">
         
        <!-- Classes -->
        <rdfs:Class rdf:about="http://example.com/ontology#MLPlatform"/>


        <rdfs:Class rdf:about="http://example.com/ontology#Security">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Access_management">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Security"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Admin_role">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Access_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Access_policy">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Access_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Data_backups">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Security"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Authentication">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Security"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#IAM">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Authentication_details">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Authentication_validation">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Digital_signature">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_key">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#OAuth2">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Implicit_flow">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#OAuth2"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Secret_key">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#OAuth2"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Organization_identifier">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication_details"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Client_ID">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication_details"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Client_secret">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Authentication_details"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Interactions">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Interfaces">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Interactions"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Cloud_SDK">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Interfaces"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Client_library">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Interfaces"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#REST_API">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Interfaces"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Resource_management">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Version_control">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Decoupling">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Resource_identifier">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Orchestration">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pipelines">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Orchestration"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Monitoring">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Deployment_configuration">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Dependency_management">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#MLOps">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Resource_management"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Workflow">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLOps"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Workflow_automation">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Workflow"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Developer_resources">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Virtual_machines">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#AI_assistant">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Frameworks">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Managed_notebooks">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Programming_languages">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pre-built_resource">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pre-built_models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Pre-built_resource"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Administrative_requests">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Development_environment">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Developer_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Virtual_environment">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Development_environment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Virtual_machines">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Virtual_environment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Containerization">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Virtual_environment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Studio_Lab">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Development_environment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#AI_studio">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Studio_Lab"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#IDE_Workflow">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Studio_Lab"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#JupyterLab">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Studio_Lab"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#RStudio_IDE">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Studio_Lab"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Data_science">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Machine_learning">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Data_science"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#ML_resources">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Machine_learning"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Remote_data_source">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Data_reference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Remote_data_source"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Dataset">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Instances">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Dataset"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Supervised_dataset">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Dataset"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#ML_Models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_resources"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Model_latency">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_Models"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Ensemble_models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_Models"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Unsupervised_models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_Models"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Compute_demanding_models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#ML_Models"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Build_and_train_models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Machine_learning"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Predictions">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Machine_learning"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Predictions"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Big_data_inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Inference_server">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Inference_endpoint">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Server-side_streaming">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Real-time_inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Serverless_inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Batch_inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Asynchronous_inference">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#REST_API">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Inference_endpoint"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#RESTful_API">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#REST_API_server">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_endpoint">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Compatibility">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_compatibility">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Compatibility"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_migration">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_compatibility"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_versioning">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_compatibility"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Syntax_and_semantic_compatibility">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_versioning"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Response_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Error_identifier">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Bad_request_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Unauthorized_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Forbidden_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Not_found_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Unavailable_resource_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Conflict_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Unavailable_resource_error">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Error_message">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_error"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#CRUD_operations">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Content_type">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#JSON">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Content_type"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Multipart_form-data">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Content_type"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Request_identifier">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_verbs">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_payload">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Controller_name">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Collection_name">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#API_response">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#REST_API"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_response">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_response_code">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Response_metadata">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#List_response">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Filtered_list">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#List_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Response_ordering">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#List_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Response_pagination">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#List_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pagination_metadata">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_pagination"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Request_headers">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Authentication_headers">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Request_headers"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Request_metadata">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Webhook">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#API_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Callback_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Webhook"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pagination_limit">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_pagination"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pagination_index">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Response_pagination"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#POST_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#PUT_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#DELETE_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#GET_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#PATCH_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Pagination_request_parameters">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#GET_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Ordering_parameter">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Pagination_request_parameters"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Request_query_filters">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#GET_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Nested_filter">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Request_query_filters"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Debugging_logs">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#GET_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Discovery_URL">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#GET_request"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#HTTP_status_codes">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Success_response">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_response"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Success_response_code">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#HTTP_status_codes"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Infrastructure">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Deployment">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Deployment_request">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Deployment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Hybrid_deployment">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Deployment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Kubernetes_deployment">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Deployment"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Data_warehouse">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Distributed_computing">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Interoperability">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Scalability">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Autoscaling">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Scalability"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Networking">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Infrastructure"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Virtual_network">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Networking"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Private_endpoints">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Virtual_network"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Operational_group">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Artifacts">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Operational_group"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Data_stores">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Operational_group"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Hyperparameter_tuning">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Operational_group"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Models">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Operational_group"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Workspace">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Workspace_metadata">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Workspace"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Storage_account">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Workspace"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Key_storage">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#Storage_account"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#User_identity">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#User_collaboration">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Indexing">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#No-Code_Low-Code_ML">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


        <rdfs:Class rdf:about="http://example.com/ontology#Databases">
            <rdfs:subClassOf rdf:resource="http://example.com/ontology#MLPlatform"/>
        </rdfs:Class>
    


    <!-- Properties -->
	<rdf:Property rdf:about="http://example.com/ontology#Text">
        <rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </rdf:Property>
    
    <rdf:Property rdf:about="http://example.com/ontology#File">
        <rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </rdf:Property>
    
    <rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#GoogleCloud"/>
	</rdf:Property>
	<rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#AWS"/>
	</rdf:Property>
	<rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#Azure"/>
	</rdf:Property>
	<rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#IBM"/>
	</rdf:Property>
	<rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#BigML"/>
	</rdf:Property>
	<rdf:Property rdf:about="http://example.com/ontology#Provider">
		<rdfs:domain rdf:resource="http://example.com/ontology#MLPlatform"/>
		<rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#H2O"/>
	</rdf:Property>
    


        <ex:Access_management rdf:about="http://example.com/ontology#annotation_0">
            <ex:Text>If you don't have the permissions to perform these tasks, ask an administrator to setup a project and enable Vertex AI for you.</ex:Text>
            <ex:File>google-cloud_environment_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Access_management>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_1">
            <ex:Text>If you are part of an organization or plan to create multiple projects, consider what naming conventions and folder hierarchies are followed, or could be followed, to make project organization clear.</ex:Text>
            <ex:File>google-cloud_environment_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Admin_role rdf:about="http://example.com/ontology#annotation_2">
            <ex:Text>IAM role and should suffice for most Vertex AI users. For full control of Vertex AI resources, you can request the Vertex AI Administrator (roles/aiplatform.admin) role.</ex:Text>
            <ex:File>google-cloud_environment_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Admin_role>
    


        <ex:Interfaces rdf:about="http://example.com/ontology#annotation_3">
            <ex:Text>interfaces that you can use to interact with Vertex AI</ex:Text>
            <ex:File>google-cloud_interfaces_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Interfaces>
    


        <ex:MLOps rdf:about="http://example.com/ontology#annotation_4">
            <ex:Text>MLOps is a set of practices that improves the stability and reliability of your ML systems</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:MLOps>
    


        <ex:MLOps rdf:about="http://example.com/ontology#annotation_5">
            <ex:Text>Vertex AI MLOps tools help you collaborate across AI teams and improve your models through predictive model monitoring, alerting, diagnosis, and actionable explanations.</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:MLOps>
    


        <ex:Orchestration rdf:about="http://example.com/ontology#annotation_6">
            <ex:Text>Orchestrate workflows</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Orchestration>
    


        <ex:Metadata rdf:about="http://example.com/ontology#annotation_7">
            <ex:Text>Track the metadata used in your ML system</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Metadata>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_8">
            <ex:Text>Identify the best model for a use case</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Version_control rdf:about="http://example.com/ontology#annotation_9">
            <ex:Text>Manage model versions</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Version_control>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_10">
            <ex:Text>Manage features</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Monitoring rdf:about="http://example.com/ontology#annotation_11">
            <ex:Text>Monitor model quality</ex:Text>
            <ex:File>google-cloud_mlops_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Monitoring>
    


        <ex:Developer_resources rdf:about="http://example.com/ontology#annotation_12">
            <ex:Text>A collaborative, managed notebook environment with the security and compliance capabilities of Google Cloud.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Developer_resources>
    


        <ex:Virtual_machines rdf:about="http://example.com/ontology#annotation_13">
            <ex:Text>A Jupyter notebook-based environment provided through virtual machine (VM) instances with features that support the entire data science workflow.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Virtual_machines>
    


        <ex:AI_assistant rdf:about="http://example.com/ontology#annotation_14">
            <ex:Text>Vertex AI lets you write code with Gemini assistance. Use the inline code completion suggestions to complete coding projects faster.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:AI_assistant>
    


        <ex:Frameworks rdf:about="http://example.com/ontology#annotation_15">
            <ex:Text>deep learning packages, including support for the TensorFlow and PyTorch frameworks.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Frameworks>
    


        <ex:Managed_notebooks rdf:about="http://example.com/ontology#annotation_16">
            <ex:Text>workflow-oriented integrations of managed notebooks and the customizability of user-managed notebooks.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Managed_notebooks>
    


        <ex:Virtual_environment rdf:about="http://example.com/ontology#annotation_17">
            <ex:Text>Vertex AI Workbench instances use kernels based on conda environments.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Virtual_environment>
    


        <ex:Databases rdf:about="http://example.com/ontology#annotation_18">
            <ex:Text>use the BigQuery integration to browse tables that you have access to, write queries, preview results, and load data into your notebook.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Databases>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_19">
            <ex:Text>Automated notebook runs</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_20">
            <ex:Text>Automated shutdown for idle instances</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Monitoring rdf:about="http://example.com/ontology#annotation_21">
            <ex:Text>Health status monitoring</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Monitoring>
    


        <ex:Data_science rdf:about="http://example.com/ontology#annotation_22">
            <ex:Text>data exploration, analysis, modeling, or as part of an end-to- end data science workflow.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Data_science>
    


        <ex:Managed_notebooks rdf:about="http://example.com/ontology#annotation_23">
            <ex:Text>Managed notebooks instances let you perform workflow-oriented tasks without leaving the JupyterLab interface.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Managed_notebooks>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_24">
            <ex:Text>compute resources your code will run on, for example, how many vCPUs or GPUs and how much RAM, and what framework you want to run the code in.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_25">
            <ex:Text>add custom Docker container images to your instance. Your custom containers appear as kernels in your instance's JupyterLab interface.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Containerization>
    


        <ex:Virtual_machines rdf:about="http://example.com/ontology#annotation_26">
            <ex:Text>User-managed notebooks instances are Deep Learning VM instances.</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Virtual_machines>
    


        <ex:Security rdf:about="http://example.com/ontology#annotation_27">
            <ex:Text>VPC Service Controls</ex:Text>
            <ex:File>google-cloud_notebook_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Security>
    


        <ex:Cloud_SDK rdf:about="http://example.com/ontology#annotation_28">
            <ex:Text>The Vertex AI SDK is a comprehensive set of classes written in Python that lets you automate an ML workflow.</ex:Text>
            <ex:File>google-cloud_overview_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Cloud_SDK>
    


        <ex:Programming_languages rdf:about="http://example.com/ontology#annotation_29">
            <ex:Text>Python language</ex:Text>
            <ex:File>google-cloud_overview_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Programming_languages>
    


        <ex:Managed_notebooks rdf:about="http://example.com/ontology#annotation_30">
            <ex:Text>Jupyter notebook-based development environment that data scientists can use for their entire ML workflow.</ex:Text>
            <ex:File>google-cloud_overview_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Managed_notebooks>
    


        <ex:Infrastructure rdf:about="http://example.com/ontology#annotation_31">
            <ex:Text>Terraform is an infrastructure-as-code (IaC) tool that you can use to provision resources and permissions for multiple Google Cloud services, including Vertex AI.</ex:Text>
            <ex:File>google-cloud_overview_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Infrastructure>
    


        <ex:Workflow rdf:about="http://example.com/ontology#annotation_32">
            <ex:Text>automate data ingestion, train models, and get predictions on Vertex AI.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Workflow>
    


        <ex:Workflow_automation rdf:about="http://example.com/ontology#annotation_33">
            <ex:Text>programmatically accomplish most of what you can do in the Google Cloud console.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Workflow_automation>
    


        <ex:Workflow_automation rdf:about="http://example.com/ontology#annotation_34">
            <ex:Text>experienced machine learning (ML) and artificial intelligence (AI) engineer or a data scientist who wants to programmatically automate your workflow.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Workflow_automation>
    


        <ex:Cloud_SDK rdf:about="http://example.com/ontology#annotation_35">
            <ex:Text>The Vertex AI SDK operates at a higher level of abstraction than the client library and is suitable for most common data science workflows.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Cloud_SDK>
    


        <ex:Client_library rdf:about="http://example.com/ontology#annotation_36">
            <ex:Text>lower-level functionality, then use the Vertex AI Python client library.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Client_library>
    


        <ex:REST_API rdf:about="http://example.com/ontology#annotation_37">
            <ex:Text>If a client library isn't available in your preferred programming language, you can use the Vertex AI REST API.</ex:Text>
            <ex:File>google-cloud_sdk_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:REST_API>
    


        <ex:Development_environment rdf:about="http://example.com/ontology#annotation_38">
            <ex:Text>Jupyter notebook-based development environment for the entire data science workflow.</ex:Text>
            <ex:File>google-cloud_workbench_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Development_environment>
    


        <ex:Databases rdf:about="http://example.com/ontology#annotation_39">
            <ex:Text>BigQuery and Cloud Storage integrations.</ex:Text>
            <ex:File>google-cloud_workbench_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Databases>
    


        <ex:Orchestration rdf:about="http://example.com/ontology#annotation_40">
            <ex:Text>Automate recurring updates to your model by using scheduled executions of your notebook's code that run on Vertex AI.</ex:Text>
            <ex:File>google-cloud_workbench_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Orchestration>
    


        <ex:Distributed_computing rdf:about="http://example.com/ontology#annotation_41">
            <ex:Text>Develop and use ML models Overview Process data quickly by running a notebook on a Dataproc cluster.</ex:Text>
            <ex:File>google-cloud_workbench_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Distributed_computing>
    


        <ex:Pipelines rdf:about="http://example.com/ontology#annotation_42">
            <ex:Text>Run a notebook as a step in a pipeline by using Vertex AI Pipelines.</ex:Text>
            <ex:File>google-cloud_workbench_09-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Pipelines>
    


        <ex:Distributed_Computing rdf:about="http://example.com/ontology#annotation_43">
            <ex:Text>You can run your local machine learning (ML) Python code as a large single-node Amazon SageMaker training job or as multiple parallel jobs.</ex:Text>
            <ex:File>aws_decorator_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Distributed_Computing>
    


        <ex:Cloud_SDK rdf:about="http://example.com/ontology#annotation_44">
            <ex:Text>The SageMaker Python SDK will automatically translate your existing workspace environment and any associated data processing code and datasets into a SageMaker training job that runs on the SageMaker training platform.</ex:Text>
            <ex:File>aws_decorator_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Cloud_SDK>
    


        <ex:Developer_resources rdf:about="http://example.com/ontology#annotation_45">
            <ex:Text>a persistent cache feature, which will further reduce job start latency by caching previously downloaded dependency packages.</ex:Text>
            <ex:File>aws_decorator_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Developer_resources>
    


        <ex:Inference rdf:about="http://example.com/ontology#annotation_46">
            <ex:Text>After you’ve built and trained a machine learning model, you can use SageMaker Inference to start getting predictions, or inferences, from your model.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Inference>
    


        <ex:Pre-built_resource rdf:about="http://example.com/ontology#annotation_47">
            <ex:Text>built-in algorithms or pre-trained models.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resource>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_48">
            <ex:Text>Create a model in SageMaker Inference by pointing to model artifacts stored in Amazon S3 and a container image.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Containerization>
    


        <ex:Inference_endpoint rdf:about="http://example.com/ontology#annotation_49">
            <ex:Text>Create a SageMaker Inference endpoint configuration by choosing the instance type and number of instances you need behind the endpoint.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Inference_endpoint>
    


        <ex:Real-time_inference rdf:about="http://example.com/ontology#annotation_50">
            <ex:Text>online inferences that have low latency or high throughput requirements.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Real-time_inference>
    


        <ex:REST_API rdf:about="http://example.com/ontology#annotation_51">
            <ex:Text>Use real-time inference for a persistent and fully managed endpoint (REST API) that can handle sustained traffic</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:REST_API>
    


        <ex:Serverless_inference rdf:about="http://example.com/ontology#annotation_52">
            <ex:Text>intermittent or unpredictable traffic patterns.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Serverless_inference>
    


        <ex:Batch_transform rdf:about="http://example.com/ontology#annotation_53">
            <ex:Text>large amounts of data are available upfront and you don’t need a persistent endpoint.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Batch_transform>
    


        <ex:Asynchronous_inference rdf:about="http://example.com/ontology#annotation_54">
            <ex:Text>queue requests and have large payloads with long processing times.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Asynchronous_inference>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_55">
            <ex:Text>To use an existing Docker container in SageMaker, see Adapting your own Docker container to work with SageMaker.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Containerization>
    


        <ex:Monitoring rdf:about="http://example.com/ontology#annotation_56">
            <ex:Text>set alerts that notify you when there are deviations in your model’s quality.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Monitoring>
    


        <ex:MLOps rdf:about="http://example.com/ontology#annotation_57">
            <ex:Text>automate the steps in your machine learning workflow and practice CI/CD.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:MLOps>
    


        <ex:Deployment_configuration rdf:about="http://example.com/ontology#annotation_58">
            <ex:Text>set of model deployment options in SageMaker Inference to update your machine learning models in production.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Deployment_configuration>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_59">
            <ex:Text>Inf1 instances are built to support machine learning inference applications and feature the AWS Inferentia chips.</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Pre-built_resource rdf:about="http://example.com/ontology#annotation_60">
            <ex:Text>prebuilt Docker images</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resource>
    


        <ex:Autoscaling rdf:about="http://example.com/ontology#annotation_61">
            <ex:Text>dynamically adjust the number of instances provisioned in response to changes in your workload</ex:Text>
            <ex:File>aws_deploy_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Autoscaling>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_62">
            <ex:Text>Amazon SageMaker makes extensive use of Docker containers for build and runtime tasks.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Containerization>
    


        <ex:Pre-built_resources rdf:about="http://example.com/ontology#annotation_63">
            <ex:Text>pre-built Docker images for its built-in algorithms and the supported deep learning frameworks used for training and inference.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resources>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_64">
            <ex:Text>Amazon SageMaker always uses Docker containers when running scripts, training algorithms, and deploying models.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Containerization>
    


        <ex:Pre-built_resources rdf:about="http://example.com/ontology#annotation_65">
            <ex:Text>Pre-built SageMaker algorithm</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resources>
    


        <ex:Frameworks rdf:about="http://example.com/ontology#annotation_66">
            <ex:Text>pre-built SageMaker container including TensorFlow and PyTorch</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Frameworks>
    


        <ex:Dependency_management rdf:about="http://example.com/ontology#annotation_67">
            <ex:Text>You can't import the dependencies</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Dependency_management>
    


        <ex:Dependency_management rdf:about="http://example.com/ontology#annotation_68">
            <ex:Text>You can't import the dependencies in the pre-built container and the pre-built container supports requirements.txt</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Dependency_management>
    


        <ex:Build_and_train_models rdf:about="http://example.com/ontology#annotation_69">
            <ex:Text>use the TensorFlow pre-built framework container to train and host the model.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Build_and_train_models>
    


        <ex:Pre-built_resources rdf:about="http://example.com/ontology#annotation_70">
            <ex:Text>built-in algorithms and frameworks without worrying about containers.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resources>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_71">
            <ex:Text>built-in algorithms and frameworks using Docker containers.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Containerization>
    


        <ex:Frameworks rdf:about="http://example.com/ontology#annotation_72">
            <ex:Text>Apache MXNet, TensorFlow, PyTorch, and Chainer.</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Frameworks>
    


        <ex:Pre-built_resources rdf:about="http://example.com/ontology#annotation_73">
            <ex:Text>extend a pre-built SageMaker algorithm or model Docker image</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resources>
    


        <ex:Pre-built_resources rdf:about="http://example.com/ontology#annotation_74">
            <ex:Text>adapt a pre-existing container image to work with SageMaker</ex:Text>
            <ex:File>aws_docker_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Pre-built_resources>
    


        <ex:IDE_Workflow rdf:about="http://example.com/ontology#annotation_75">
            <ex:Text>web-based experience for running ML workflows with a suite of IDEs</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:IDE_Workflow>
    


        <ex:Data_science rdf:about="http://example.com/ontology#annotation_76">
            <ex:Text>build, train, debug, deploy, and monitor your machine learning models</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Data_science>
    


        <ex:Managed_notebooks rdf:about="http://example.com/ontology#annotation_77">
            <ex:Text>prepare and process data, and train and deploy machine learning models from a compute instance running the Jupyter Notebook application.</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Managed_notebooks>
    


        <ex:JupyterLab rdf:about="http://example.com/ontology#annotation_78">
            <ex:Text>environment based on open-source JupyterLab,</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:JupyterLab>
    


        <ex:No-Code_Low-Code_ML rdf:about="http://example.com/ontology#annotation_79">
            <ex:Text>generate predictions without needing to code.</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:No-Code_Low-Code_ML>
    


        <ex:RStudio_IDE rdf:about="http://example.com/ontology#annotation_80">
            <ex:Text>direct code execution, and tools for plotting, history, debugging and workspace management.</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:RStudio_IDE>
    


        <ex:Data_warehouse rdf:about="http://example.com/ontology#annotation_81">
            <ex:Text>The process of creating a AmazonDataZone domain creates a corresponding Amazon SageMaker domain along with AWS Glue or Amazon Redshift databases for your ETL workflows.</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:Data_warehouse>
    


        <ex:User_collaboration rdf:about="http://example.com/ontology#annotation_82">
            <ex:Text>share data and models with each other.</ex:Text>
            <ex:File>aws_environments_09-05-2024</ex:File>
            <ex:Provider>AWS</ex:Provider>
    	</ex:User_collaboration>
    


        <ex:HTTP_verbs rdf:about="http://example.com/ontology#annotation_83">
            <ex:Text>The REST API uses HTTP verbs in a standard way to create, retrieve, update, and delete resources.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:HTTP_verbs>
    


        <ex:Compatibility rdf:about="http://example.com/ontology#annotation_84">
            <ex:Text>REST API works with any language or tool that can make HTTP requests.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Compatibility>
    


        <ex:Workflow_automation rdf:about="http://example.com/ontology#annotation_85">
            <ex:Text>straightforward structure often makes it a good choice in scripting environments and for MLOps automation.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Workflow_automation>
    


        <ex:Administrative_requests rdf:about="http://example.com/ontology#annotation_86">
            <ex:Text>Administrative REST requests use service principal authentication.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Administrative_requests>
    


        <ex:Implicit_flow rdf:about="http://example.com/ontology#annotation_87">
            <ex:Text>Administrative REST requests are authenticated with an OAuth2 implicit flow.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Implicit_flow>
    


        <ex:Organization_identifier rdf:about="http://example.com/ontology#annotation_88">
            <ex:Text>identifying the organization</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Organization_identifier>
    


        <ex:Client_ID rdf:about="http://example.com/ontology#annotation_89">
            <ex:Text>client ID</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Client_ID>
    


        <ex:Client_secret rdf:about="http://example.com/ontology#annotation_90">
            <ex:Text>client secret</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Client_secret>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_91">
            <ex:Text>Each service provider updates their API on their own cadence, but does so without breaking existing programs.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_92">
            <ex:Text>The service provider uses the api-version argument to ensure compatibility.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_93">
            <ex:Text>The api-version argument varies from service to service.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_94">
            <ex:Text>All REST calls should set the api-version argument to the expected value.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_versioning>
    


        <ex:Syntax_and_semantic_compatibility rdf:about="http://example.com/ontology#annotation_95">
            <ex:Text>rely on the syntax and semantics of the specified version even as the API continues to evolve</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Syntax_and_semantic_compatibility>
    


        <ex:Bad_request_error rdf:about="http://example.com/ontology#annotation_96">
            <ex:Text>send a request to a provider without the api-version argument, the response will contain a human- readable list of supported values</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Bad_request_error>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_97">
            <ex:Text>workspaces in a resource group,</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Resource_management>
    


        <ex:REST_API_server rdf:about="http://example.com/ontology#annotation_98">
            <ex:Text>REST API server specific to the location of the workspace.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:REST_API_server>
    


        <ex:Discovery_URL rdf:about="http://example.com/ontology#annotation_99">
            <ex:Text>discoveryUrl key</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Discovery_URL>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_100">
            <ex:Text>to list experiments the path begins with history/v1.0 while to list models, the path begins with modelmanagement/v1.0</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_versioning>
    


        <ex:Artifacts rdf:about="http://example.com/ontology#annotation_101">
            <ex:Text>Artifacts</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Artifacts>
    


        <ex:Data_stores rdf:about="http://example.com/ontology#annotation_102">
            <ex:Text>Data stores</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Data_stores>
    


        <ex:Hyperparameter_tuning rdf:about="http://example.com/ontology#annotation_103">
            <ex:Text>Hyperparameter tuning</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Hyperparameter_tuning>
    


        <ex:Models rdf:about="http://example.com/ontology#annotation_104">
            <ex:Text>Models</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Models>
    


        <ex:HTTP_verbs rdf:about="http://example.com/ontology#annotation_105">
            <ex:Text>retrieval with the GET verb,</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:HTTP_verbs>
    


        <ex:MLOps rdf:about="http://example.com/ontology#annotation_106">
            <ex:Text>the REST API supports the creation of all the resources necessary to train, deploy, and monitor ML solutions.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:MLOps>
    


        <ex:PUT_request rdf:about="http://example.com/ontology#annotation_107">
            <ex:Text>To create or overwrite a named compute resource, you'll use a PUT request.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:PUT_request>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_108">
            <ex:Text>A successful request will get a 201 Created response, but note that this response simply meansthat the provisioning process has begun.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_109">
            <ex:Text>Every Azure Machine Learning workspace has a dependency on four other Azure resources:</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_110">
            <ex:Text>You should receive a 202 Accepted response and, in the returned headers, a Location URI.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:Debugging_logs rdf:about="http://example.com/ontology#annotation_111">
            <ex:Text>GET this URI for information on the deployment, including helpful debugging information if there's a problem with one of your dependent resources</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Debugging_logs>
    


        <ex:User_identity rdf:about="http://example.com/ontology#annotation_112">
            <ex:Text>create a workspace with user-assigned managed identity,</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:User_identity>
    


        <ex:Workspace_metadata rdf:about="http://example.com/ontology#annotation_113">
            <ex:Text>metadata for the workspace is stored in an Azure Cosmos DB instance</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Workspace_metadata>
    


        <ex:Secret_key rdf:about="http://example.com/ontology#annotation_114">
            <ex:Text>Instead of using the Microsoft-managed key, you can also provide your own key.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Secret_key>
    


        <ex:Secret_key rdf:about="http://example.com/ontology#annotation_115">
            <ex:Text>Azure Key Vault that contains an encryption key.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Secret_key>
    


        <ex:Data_backups rdf:about="http://example.com/ontology#annotation_116">
            <ex:Text>The Azure Key Vault must have soft delete and purge protection enabled to protect against data loss if there was accidental deletion.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Data_backups>
    


        <ex:Access_policy rdf:about="http://example.com/ontology#annotation_117">
            <ex:Text>have an access policy in Azure Key Vault that grants get, wrap, and unwrap access to the Azure Cosmos DB application.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Access_policy>
    


        <ex:HTTP_verbs rdf:about="http://example.com/ontology#annotation_118">
            <ex:Text>Some, but not all, resources support the DELETE verb.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:HTTP_verbs>
    


        <ex:Response_error rdf:about="http://example.com/ontology#annotation_119">
            <ex:Text>No registered resource provider found for location {location}</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Response_error>
    


        <ex:Response_error rdf:about="http://example.com/ontology#annotation_120">
            <ex:Text>The subscription is not registered to use namespace {resource-provider-namespace}</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Response_error>
    


        <ex:Workspace rdf:about="http://example.com/ontology#annotation_121">
            <ex:Text>Creating the Azure Machine Learning workspace.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Workspace>
    


        <ex:Storage_account rdf:about="http://example.com/ontology#annotation_122">
            <ex:Text>Azure Storage Account is used as the default storage for the workspace.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Storage_account>
    


        <ex:Containerization rdf:about="http://example.com/ontology#annotation_123">
            <ex:Text>Azure Container Registry is used by the workspace to build Docker images.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Containerization>
    


        <ex:Key_storage rdf:about="http://example.com/ontology#annotation_124">
            <ex:Text>Azure Key Vault is used by the workspace to store secrets.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Key_storage>
    


        <ex:Managed_notebooks rdf:about="http://example.com/ontology#annotation_125">
            <ex:Text>Integrated notebooks on Azure Machine Learning compute instance.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Managed_notebooks>
    


        <ex:Kubernetes_deployment rdf:about="http://example.com/ontology#annotation_126">
            <ex:Text>If you plan on deploying trained models to Azure Kubernetes Services.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Kubernetes_deployment>
    


        <ex:Workspace_metadata rdf:about="http://example.com/ontology#annotation_127">
            <ex:Text>Azure CosmosDB instance that logs metadata for the workspace.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Workspace_metadata>
    


        <ex:Indexing rdf:about="http://example.com/ontology#annotation_128">
            <ex:Text>Azure Search provides indexing capabilities for the workspace.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Indexing>
    


        <ex:Virtual_network rdf:about="http://example.com/ontology#annotation_129">
            <ex:Text>managed virtual network with Azure Machine Learning,</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Virtual_network>
    


        <ex:Private_endpoints rdf:about="http://example.com/ontology#annotation_130">
            <ex:Text>creating private endpoints for the managed virtual network.</ex:Text>
            <ex:File>azure_rest_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Private_endpoints>
    


        <ex:REST_API rdf:about="http://example.com/ontology#annotation_131">
            <ex:Text>Machine Learning REST API to easily build, run, and bring predictive models to your project.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:REST_API>
    


        <ex:Pipelines rdf:about="http://example.com/ontology#annotation_132">
            <ex:Text>basic supervised and unsupervised machine learning tasks and also to create sophisticated machine learning pipelines.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pipelines>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_133">
            <ex:Text>REST-style API for creating and managing BigML resources programmatically.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_management>
    


        <ex:CRUD_operations rdf:about="http://example.com/ontology#annotation_134">
            <ex:Text>create, retrieve, update and delete BigML resources using standard HTTP methods.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:CRUD_operations>
    


        <ex:ML_resources rdf:about="http://example.com/ontology#annotation_135">
            <ex:Text>source, dataset, model, and prediction.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:ML_resources>
    


        <ex:Workflow rdf:about="http://example.com/ontology#annotation_136">
            <ex:Text>local (or remote) training data to create a source, then using the source to create a dataset, later using the dataset to create a model, and, finally, using the model and new input data to create a prediction.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Workflow>
    


        <ex:Instances rdf:about="http://example.com/ontology#annotation_137">
            <ex:Text>Each row in the data represents an instance (or example) and each column a field (or attribute).</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Instances>
    


        <ex:Supervised_dataset rdf:about="http://example.com/ontology#annotation_138">
            <ex:Text>supervised one of the columns (usually the last column) represents a special attribute known as objective field (or target)</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Supervised_dataset>
    


        <ex:ML_Models rdf:about="http://example.com/ontology#annotation_139">
            <ex:Text>A model can be either a classification or a regression model depending on whether the objective field is respectively categorical or numeric.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:ML_Models>
    


        <ex:Ensemble_models rdf:about="http://example.com/ontology#annotation_140">
            <ex:Text>ensemble (or collection of models) can perform better than just a single model.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Ensemble_models>
    


        <ex:Unsupervised_models rdf:about="http://example.com/ontology#annotation_141">
            <ex:Text>Clusters and Anomaly Detectors are both built using unsupervised learning and therefore an objective field is not needed.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Unsupervised_models>
    


        <ex:Inference rdf:about="http://example.com/ontology#annotation_142">
            <ex:Text>an anomaly score is to an anomaly detector what a prediction is to a model.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Inference>
    


        <ex:Datasets rdf:about="http://example.com/ontology#annotation_143">
            <ex:Text>generating predictions for a relative big collection of input data is very convenient.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Datasets>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_144">
            <ex:Text>BigML also has a resource named project that helps you group together all the other resources.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_management>
    


        <ex:Resource_management rdf:about="http://example.com/ontology#annotation_145">
            <ex:Text>assign a source to a pre-existing project and all the subsequent resources will be created in that project.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_management>
    


        <ex:RESTful_API rdf:about="http://example.com/ontology#annotation_146">
            <ex:Text>BigML.io conforms to the design principles of Representational State Transfer (REST). BigML.io is entirely HTTPS-based.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:RESTful_API>
    


        <ex:CRUD_operations rdf:about="http://example.com/ontology#annotation_147">
            <ex:Text>You can create, read, update, and delete resources using the respective standard HTTP methods: POST, GET, PUT and DELETE.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:CRUD_operations>
    


        <ex:JSON rdf:about="http://example.com/ontology#annotation_148">
            <ex:Text>All communication with BigML.io is JSON formatted</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:JSON>
    


        <ex:Multipart_form-data rdf:about="http://example.com/ontology#annotation_149">
            <ex:Text>Source creation is handled with a HTTP PUT using the "multipart/form-data" content-type.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Multipart_form-data>
    


        <ex:SSL_encryption rdf:about="http://example.com/ontology#annotation_150">
            <ex:Text>communication between your application and BigML.io is encrypted and the integrity of traffic between both is verified.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:SSL_encryption>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_151">
            <ex:Text>The BigML.io API is versioned using code names instead of version numbers.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_152">
            <ex:Text>If you omit the version name in your API requests, you will always get access to the latest API version.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_compatibility rdf:about="http://example.com/ontology#annotation_153">
            <ex:Text>Specifying the API version in your HTTP calls will ensure that your application continues to function for the life cycle of the API release.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:API_compatibility>
    


        <ex:POST_request rdf:about="http://example.com/ontology#annotation_154">
            <ex:Text>Creates a new resource. Only certain fields are "postable". This method is not idempotent. Each valid POST request results in a new directly accessible resource.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:POST_request>
    


        <ex:GET_request rdf:about="http://example.com/ontology#annotation_155">
            <ex:Text>Retrieves either a specific resource or a list of resources. This methods is idempotent. The content type of the resources is always "application/json; charset=utf-8".</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:GET_request>
    


        <ex:PUT_request rdf:about="http://example.com/ontology#annotation_156">
            <ex:Text>Updates partial content of a resource. Only certain fields are "putable". This method is idempotent.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:PUT_request>
    


        <ex:DELETE_request rdf:about="http://example.com/ontology#annotation_157">
            <ex:Text>Deletes a resource. This method is idempotent.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:DELETE_request>
    


        <ex:Resource_identifier rdf:about="http://example.com/ontology#annotation_158">
            <ex:Text>All BigML resources are identified by a name composed of two parts separated by a slash "/". The first part is the type of the resource and the second part is a 24-char unique identifier.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_identifier>
    


        <ex:Resource_identifier rdf:about="http://example.com/ontology#annotation_159">
            <ex:Text>The resource id is also used as the input parameter for the creation of dependent resources.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_identifier>
    


        <ex:Client_library rdf:about="http://example.com/ontology#annotation_160">
            <ex:Text>We have developed light-weight API bindings for Python, Node.js, and Java.</ex:Text>
            <ex:File>bigml_overview_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Client_library>
    


        <ex:CRUD_operations rdf:about="http://example.com/ontology#annotation_161">
            <ex:Text>BigML.io uses the standard POST, GET, PUT, and DELETE HTTP methods to create, retrieve, update, and delete individual resources, respectively.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:CRUD_operations>
    


        <ex:POST_request rdf:about="http://example.com/ontology#annotation_162">
            <ex:Text>To create a new resource, you need to POST an object to the resource's base URL. The content-type must always be "application/json".</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:POST_request>
    


        <ex:JSON rdf:about="http://example.com/ontology#annotation_163">
            <ex:Text>content-type must always be "application/json".</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:JSON>
    


        <ex:Multipart_form-data rdf:about="http://example.com/ontology#annotation_164">
            <ex:Text>source creation which requires the "multipart/form-data" content type.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Multipart_form-data>
    


        <ex:API_key rdf:about="http://example.com/ontology#annotation_165">
            <ex:Text>$BIGML_AUTH"</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:API_key>
    


        <ex:API_key rdf:about="http://example.com/ontology#annotation_166">
            <ex:Text>api_key=</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:API_key>
    


        <ex:GET_request rdf:about="http://example.com/ontology#annotation_167">
            <ex:Text>To retrieve a resource, you need to issue a HTTP GET request to the resource/id to be retrieved.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:GET_request>
    


        <ex:Resource_identifier rdf:about="http://example.com/ontology#annotation_168">
            <ex:Text>resource has a unique identifier in the form resource/id where resource is a type of the resource such as dataset, model, and etc,</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Resource_identifier>
    


        <ex:PUT_request rdf:about="http://example.com/ontology#annotation_169">
            <ex:Text>PUT an object containing the fields that you want to update to the resource's base URL.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:PUT_request>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_170">
            <ex:Text>If the request succeeds, BigML.io will respond with a 202 accepted code and with the new updatedresource in the body of the message.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:DELETE_request rdf:about="http://example.com/ontology#annotation_171">
            <ex:Text>To delete a resource, you need to issue a HTTP DELETE request to the resource/id to be deleted.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:DELETE_request>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_172">
            <ex:Text>Successful DELETEs will return HTTP 204 responses with no body.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:Metadata rdf:about="http://example.com/ontology#annotation_173">
            <ex:Text>HTTP/1.1 204 NO CONTENT Content-Length: 0</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Metadata>
    


        <ex:Response_error rdf:about="http://example.com/ontology#annotation_174">
            <ex:Text>try to delete a dataset a second time, or a dataset that does not exist you will receive an error</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Response_error>
    


        <ex:Response_pagination rdf:about="http://example.com/ontology#annotation_175">
            <ex:Text>By default, only the 20 most recent resources will be returned.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Response_pagination>
    


        <ex:Authentication_details rdf:about="http://example.com/ontology#annotation_176">
            <ex:Text>username and API key</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Authentication_details>
    


        <ex:Response_pagination rdf:about="http://example.com/ontology#annotation_177">
            <ex:Text>Specifies in which page of the listing you are, how to get to the previous page and next page, and the total number of resources.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Response_pagination>
    


        <ex:Filtered_list rdf:about="http://example.com/ontology#annotation_178">
            <ex:Text>A list of resources filtered and ordered according to the criteria that you supply in your request.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Filtered_list>
    


        <ex:Pagination_metadata rdf:about="http://example.com/ontology#annotation_179">
            <ex:Text>"meta"</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pagination_metadata>
    


        <ex:Pagination_limit rdf:about="http://example.com/ontology#annotation_180">
            <ex:Text>Specifies the number of resources to retrieve. Must be less than or equal to 200.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pagination_limit>
    


        <ex:Pagination_index rdf:about="http://example.com/ontology#annotation_181">
            <ex:Text>The order number from which the resource listing will start.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pagination_index>
    


        <ex:Pagination_limit rdf:about="http://example.com/ontology#annotation_182">
            <ex:Text>If a limit is given, no more than that many resources will be returned but possibly less, if the request itself yields less resources.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pagination_limit>
    


        <ex:Pagination_request_paramaters rdf:about="http://example.com/ontology#annotation_183">
            <ex:Text>"limit=10&offset=0", "limit=10&offset=10", and limit=10&offset=20",</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Pagination_request_paramaters>
    


        <ex:Request_query_filters rdf:about="http://example.com/ontology#annotation_184">
            <ex:Text>The listings of resources can be filtered by any of the fields that we labeled as filterable in the table describing the properties of a resource type.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Request_query_filters>
    


        <ex:Nested_filter rdf:about="http://example.com/ontology#annotation_185">
            <ex:Text>&tags__in=fraud</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Nested_filter>
    


        <ex:Response_ordering rdf:about="http://example.com/ontology#annotation_186">
            <ex:Text>A list of resources can also be ordered by any of the fields that we labeled as sortable in the table describing the properties of a resource type.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Response_ordering>
    


        <ex:Ordering_parameter rdf:about="http://example.com/ontology#annotation_187">
            <ex:Text>order_by</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Ordering_parameter>
    


        <ex:Callback_request rdf:about="http://example.com/ontology#annotation_188">
            <ex:Text>When the finished or error event is triggered, BigML.io can send an HTTP POST payload to the webhook's configured URL.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Callback_request>
    


        <ex:Webhook rdf:about="http://example.com/ontology#annotation_189">
            <ex:Text>When you create a resource, you can specify the webhook parameter in the POST payload.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Webhook>
    


        <ex:Callback_request rdf:about="http://example.com/ontology#annotation_190">
            <ex:Text>When the resource creation is complete, BigML.io calls the provided URL and send an HTTP POST payload, and expects to receive an HTTP 201 status code.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Callback_request>
    


        <ex:Authentication_details rdf:about="http://example.com/ontology#annotation_191">
            <ex:Text>secret parameter to secure your webhook.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Authentication_details>
    


        <ex:Digital_signature rdf:about="http://example.com/ontology#annotation_192">
            <ex:Text>generate the HMAC hex digest value of the request body in the X-BigML-Signature header if provided.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Digital_signature>
    


        <ex:Authentication_headers rdf:about="http://example.com/ontology#annotation_193">
            <ex:Text>The headers also contain X-BigML-Delivery, a GUID to identify the delivery, and User-Agent,</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Authentication_headers>
    


        <ex:JSON rdf:about="http://example.com/ontology#annotation_194">
            <ex:Text>The payload of the POST request is in the JSON format, so be sure to accept Content-Type: application/json.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:JSON>
    


        <ex:Authentication_headers rdf:about="http://example.com/ontology#annotation_195">
            <ex:Text>the headers contain X- BigML-Signature when secret is provided.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Authentication_headers>
    


        <ex:Authentication_validation rdf:about="http://example.com/ontology#annotation_196">
            <ex:Text>it is convenient to validate the webhook call authenticity comparing received sha1 in the X-BigML-Signature header with a new generate HMAC hex digest value of the POST request body using same secret value sent in the creation request.</ex:Text>
            <ex:File>bigml_requests_09-05-2024</ex:File>
            <ex:Provider>BigML</ex:Provider>
    	</ex:Authentication_validation>
    


        <ex:Inference rdf:about="http://example.com/ontology#annotation_197">
            <ex:Text>deploy them to production so that others can use them for inference.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Inference>
    


        <ex:Inference rdf:about="http://example.com/ontology#annotation_198">
            <ex:Text>new input data to the machine learning model or pipeline to generate outputs.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Inference>
    


        <ex:Decoupling rdf:about="http://example.com/ontology#annotation_199">
            <ex:Text>decouple the interface of your production workload from the implementation that serves it.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Decoupling>
    


        <ex:API_request rdf:about="http://example.com/ontology#annotation_200">
            <ex:Text>a user with certain credentials makes an HTTP request to a URL andprovides a picture of a car as part of the request.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_request>
    


        <ex:ML_Models rdf:about="http://example.com/ontology#annotation_201">
            <ex:Text>implement the model using a Keras sequential classifier with a RestNet architecture from the TensorFlow Hub.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:ML_Models>
    


        <ex:Inference_endpoint rdf:about="http://example.com/ontology#annotation_202">
            <ex:Text>deployment under the endpoint.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Inference_endpoint>
    


        <ex:Inference_endpoint rdf:about="http://example.com/ontology#annotation_203">
            <ex:Text>another deployment under the same endpoint.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Inference_endpoint>
    


        <ex:API_endpoint rdf:about="http://example.com/ontology#annotation_204">
            <ex:Text>An endpoint is a stable and durable URL that can be used to request or invoke a model.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:API_endpoint>
    


        <ex:Deployment rdf:about="http://example.com/ontology#annotation_205">
            <ex:Text>A deployment is a set of resources and computes required for hosting the model or component that does the actual inferencing.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Deployment>
    


        <ex:Real-time_inference rdf:about="http://example.com/ontology#annotation_206">
            <ex:Text>Online endpoints are designed for real-time inference</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Real-time_inference>
    


        <ex:Batch_inference rdf:about="http://example.com/ontology#annotation_207">
            <ex:Text>Batch endpoints, on the other hand, aredesigned for long-running batch inference.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Batch_inference>
    


        <ex:Real-time_inference rdf:about="http://example.com/ontology#annotation_208">
            <ex:Text>operationalize models for real-time inference in synchronous low- latency requests.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Real-time_inference>
    


        <ex:Model_latency rdf:about="http://example.com/ontology#annotation_209">
            <ex:Text>Your model can answer the request in a relatively short amount of time.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Model_latency>
    


        <ex:Scalability rdf:about="http://example.com/ontology#annotation_210">
            <ex:Text>You need to scale up in terms of number of requests.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Scalability>
    


        <ex:Batch_inference rdf:about="http://example.com/ontology#annotation_211">
            <ex:Text>operationalize models or pipelines for long-running asynchronous inference.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Batch_inference>
    


        <ex:Compute_demanding_models rdf:about="http://example.com/ontology#annotation_212">
            <ex:Text>expensive models or pipelines that require a longer time to run.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Compute_demanding_models>
    


        <ex:Big_data_inference rdf:about="http://example.com/ontology#annotation_213">
            <ex:Text>perform inference over large amounts of data that are distributed in multiple files.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Big_data_inference>
    


        <ex:Storage_account rdf:about="http://example.com/ontology#annotation_214">
            <ex:Text>model's inputs are stored in a storage account</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Storage_account>
    


        <ex:Distributed_computing rdf:about="http://example.com/ontology#annotation_215">
            <ex:Text>parallelization.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Distributed_computing>
    


        <ex:Inference_server rdf:about="http://example.com/ontology#annotation_216">
            <ex:Text>Inference server refers to the serving technology that takes requests, processes them, and creates responses.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Inference_server>
    


        <ex:Autoscaling rdf:about="http://example.com/ontology#annotation_217">
            <ex:Text>Autoscaling is the ability to dynamically scale up or scale down the deployment's allocated resources based on its load.</ex:Text>
            <ex:File>azure_endpoints_09-05-2024</ex:File>
            <ex:Provider>Azure</ex:Provider>
    	</ex:Autoscaling>
    


        <ex:Controller_name rdf:about="http://example.com/ontology#annotation_218">
            <ex:Text>POST /v1/{name}:cancel</ex:Text>
            <ex:File>google-cloud_reference-rest_19-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Controller_name>
    


        <ex:PATCH_request rdf:about="http://example.com/ontology#annotation_219">
            <ex:Text>patch PATCH /v1/{dataset.name}</ex:Text>
            <ex:File>google-cloud_reference-rest_19-05-2024</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:PATCH_request>
    


        <ex:Collection_name rdf:about="http://example.com/ontology#annotation_220">
            <ex:Text>GET /v1/{parent}/dataItems</ex:Text>
            <ex:File>google-cloud_reference-rest_19-05-2025</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Collection_name>
    


        <ex:HTTP_payload rdf:about="http://example.com/ontology#annotation_221">
            <ex:Text>Perform an online prediction with an arbitrary HTTP payload.</ex:Text>
            <ex:File>google-cloud_reference-rest_19-05-2026</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:HTTP_payload>
    


        <ex:Server-side_streaming rdf:about="http://example.com/ontology#annotation_222">
            <ex:Text>Perform a server-side streaming online prediction request for Vertex LLM streaming.</ex:Text>
            <ex:File>google-cloud_reference-rest_19-05-2027</ex:File>
            <ex:Provider>Google Cloud</ex:Provider>
    	</ex:Server-side_streaming>
    


        <ex:Data_science rdf:about="http://example.com/ontology#annotation_223">
            <ex:Text>Tune and guide models with your enterprise data to meet your needs with easy-to-use tools for building and refining performant prompts.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2024</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Data_science>
    


        <ex:Pre-built_models rdf:about="http://example.com/ontology#annotation_224">
            <ex:Text>IBM-developed, open-source and third-party models</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2025</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Pre-built_models>
    


        <ex:Security rdf:about="http://example.com/ontology#annotation_225">
            <ex:Text>indemnifies the client against third-party IP claims.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2026</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Security>
    


        <ex:Data_warehouse rdf:about="http://example.com/ontology#annotation_226">
            <ex:Text>scale and accelerate the impact of AI with trusted data across the business, using data wherever it resides.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2027</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Data_warehouse>
    


        <ex:Hybrid_deployment rdf:about="http://example.com/ontology#annotation_227">
            <ex:Text>integrate and deploy your AI workloads into your hybrid-cloud stack of choice.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2028</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Hybrid_deployment>
    


        <ex:Pre-built_models rdf:about="http://example.com/ontology#annotation_228">
            <ex:Text>open source models</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2029</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Pre-built_models>
    


        <ex:Workflow rdf:about="http://example.com/ontology#annotation_229">
            <ex:Text>Accelerate the full AI model lifecycle with all the tools and runtimes in one place to train, validate, tune and deploy AI models across clouds and on-premises environments.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2030</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Workflow>
    


        <ex:Pre-built_models rdf:about="http://example.com/ontology#annotation_230">
            <ex:Text>Clients can bring in IBM-supported custom foundation models from Hugging Face and have access to other third-party models including Llama 3 and Mixtral 8x7b.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2031</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Pre-built_models>
    


        <ex:AI_studio rdf:about="http://example.com/ontology#annotation_231">
            <ex:Text>work with foundation models and build prompts using prompt engineering.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2032</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:AI_studio>
    


        <ex:AI_studio rdf:about="http://example.com/ontology#annotation_232">
            <ex:Text>Prompt-tune foundation models as part of our Tuning Studio to help tune your foundation models with labeled data for better performance and accuracy.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2033</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:AI_studio>
    


        <ex:Interoperability rdf:about="http://example.com/ontology#annotation_233">
            <ex:Text>AI applications to be effortlessly deployed to the cloud, accessed via API calls or SDKs, and integrated into existing projects and architectures.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2034</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Interoperability>
    


        <ex:Workflow_automation rdf:about="http://example.com/ontology#annotation_234">
            <ex:Text>Automate the entire AI model lifecycle from development to deployment with connections to a variety of APIs,SDKs and libraries.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2035</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Workflow_automation>
    


        <ex:MLOps rdf:about="http://example.com/ontology#annotation_235">
            <ex:Text>Build models either visually or with code, deploy and monitor with end-to-end lifecycle explainability and fairness.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2036</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:MLOps>
    


        <ex:Pipelines rdf:about="http://example.com/ontology#annotation_236">
            <ex:Text>Single collaborative studio for data scientists to build, train and deploy ML models.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2037</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Pipelines>
    


        <ex:Interoperability rdf:about="http://example.com/ontology#annotation_237">
            <ex:Text>Its Amazing ML and predictive Analytics and easy integration with other system.</ex:Text>
            <ex:File>ibm_watson-ai_05-06-2038</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Interoperability>
    


        <ex:IAM rdf:about="http://example.com/ontology#annotation_238">
            <ex:Text>Access Management (IAM) to authenticate requests.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2024</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:IAM>
    


        <ex:HTTP_response_codes rdf:about="http://example.com/ontology#annotation_239">
            <ex:Text>This API uses standard HTTP response codes to indicate whether a method completed successfully.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2025</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:HTTP_response_codes>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_240">
            <ex:Text>200 type response indicates success.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2026</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:Bad_request_error rdf:about="http://example.com/ontology#annotation_241">
            <ex:Text>The input parameters in the request body are either incomplete, or in the wrong format, or some other input validation failed.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2027</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Bad_request_error>
    


        <ex:Unauthorized_error rdf:about="http://example.com/ontology#annotation_242">
            <ex:Text>You are not authorized to make this request.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2028</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Unauthorized_error>
    


        <ex:Forbidden_error rdf:about="http://example.com/ontology#annotation_243">
            <ex:Text>The supplied authentication is not authorized.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2029</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Forbidden_error>
    


        <ex:Not_found_error rdf:about="http://example.com/ontology#annotation_244">
            <ex:Text>The requested resource could not be found.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2030</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Not_found_error>
    


        <ex:Unavailable_resource_error rdf:about="http://example.com/ontology#annotation_245">
            <ex:Text>Note that 429 and 503 errors may mean that the model is overloaded or unavailable, check the error description for more details.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2031</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Unavailable_resource_error>
    


        <ex:Error_identifier rdf:about="http://example.com/ontology#annotation_246">
            <ex:Text>An identifier that can be used to trace the request. This can be set using X- Global-Transaction-Id .</ex:Text>
            <ex:File>ibm_api-docs_05-06-2032</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Error_identifier>
    


        <ex:HTTP_status_codes rdf:about="http://example.com/ontology#annotation_247">
            <ex:Text>A simple string code that should convey the general sense of the error.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2033</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:HTTP_status_codes>
    


        <ex:Error_message rdf:about="http://example.com/ontology#annotation_248">
            <ex:Text>The message that describes the error.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2034</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Error_message>
    


        <ex:Request_identifier rdf:about="http://example.com/ontology#annotation_249">
            <ex:Text>An optional transaction ID can be passed to your request, which can be useful for tracking calls through multiple services using one identifier.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2035</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Request_identifier>
    


        <ex:Request_identifier rdf:about="http://example.com/ontology#annotation_250">
            <ex:Text>If there is not a transaction ID that is passed in, then one is generated randomly.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2036</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Request_identifier>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_251">
            <ex:Text>Changes to existing API versions are designed to be compatible with existing client applications,</ex:Text>
            <ex:File>ibm_api-docs_05-06-2037</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_252">
            <ex:Text>API requests require a version parameter that takes the date in the format version=YYYY-MM-DD</ex:Text>
            <ex:File>ibm_api-docs_05-06-2038</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:API_versioning>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_253">
            <ex:Text>When the API is changed in a way that is not compatible with previous versions, a new minor version is released.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2039</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:API_versioning>
    


        <ex:Remote_data_source rdf:about="http://example.com/ontology#annotation_254">
            <ex:Text>Accessing data in a remote location (such as a Cloud Object Storage bucket, or an SQL/no-SQL database) requires the use of connection_asset or data_asset reference types.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2040</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Remote_data_source>
    


        <ex:Data_reference rdf:about="http://example.com/ontology#annotation_255">
            <ex:Text>reference types are created within a space or a project and are referenced in WML requests to represent input data and results locations.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2041</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Data_reference>
    


        <ex:Monitoring rdf:about="http://example.com/ontology#annotation_256">
            <ex:Text>You can monitor API activity within your account by using the IBM Cloud Activity Tracker service.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2042</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Monitoring>
    


        <ex:API_migration rdf:about="http://example.com/ontology#annotation_257">
            <ex:Text>changes required in order to migrate from the beta API to the GA API.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2043</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:API_migration>
    


        <ex:API_versioning rdf:about="http://example.com/ontology#annotation_258">
            <ex:Text>version Required *</ex:Text>
            <ex:File>ibm_api-docs_05-06-2044</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:API_versioning>
    


        <ex:required_body_field rdf:about="http://example.com/ontology#annotation_259">
            <ex:Text>base_model_id : required</ex:Text>
            <ex:File>ibm_api-docs_05-06-2045</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:required_body_field>
    


        <ex:Deployment_request rdf:about="http://example.com/ontology#annotation_260">
            <ex:Text>Indicates that this is an online deployment. An object has to be specified but can be empty.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2046</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Deployment_request>
    


        <ex:Response_metadata rdf:about="http://example.com/ontology#annotation_261">
            <ex:Text>Common metadata for a resource where project_id or space_id must be present.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2047</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Response_metadata>
    


        <ex:Success_response_code rdf:about="http://example.com/ontology#annotation_262">
            <ex:Text>202 Deployment created.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2048</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Success_response_code>
    


        <ex:Pagination_limit rdf:about="http://example.com/ontology#annotation_263">
            <ex:Text>The number of items to return in each page.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2049</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Pagination_limit>
    


        <ex:Conflict_error_handling rdf:about="http://example.com/ontology#annotation_264">
            <ex:Text>Returned when serving_name and conflict query parameters are used. The response body will contain the reason.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2050</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Conflict_error_handling>
    


        <ex:Unavailable_resource_error_handling rdf:about="http://example.com/ontology#annotation_265">
            <ex:Text>429 The number of requests has exceeded the rate limit.</ex:Text>
            <ex:File>ibm_api-docs_05-06-2051</ex:File>
            <ex:Provider>IBM</ex:Provider>
    	</ex:Unavailable_resource_error_handling>
    

</rdf:RDF>
